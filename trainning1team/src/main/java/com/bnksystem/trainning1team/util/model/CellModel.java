package com.bnksystem.trainning1team.util.model;import org.apache.poi.hssf.util.HSSFColor;import org.apache.poi.ss.usermodel.*;import org.apache.poi.xssf.usermodel.XSSFColor;public class CellModel {    private CellType type;    private Object value;    private int width = 6000;    private short height = 600;    private BorderStyle border = BorderStyle.THIN;    private int rowspan = 0;    private int colspan = 0;    private String fontFamily;    private int fontSize = 0;    private boolean bold = false;    private XSSFColor backgroundColor;    private HSSFColor textColor;    private HorizontalAlignment horizontalAlignment;    private VerticalAlignment verticalAlignment;    private CellModel(){}    public CellModel(CellType type, Object value            , int width, short height, BorderStyle border            , int rowSpan, int colSpan            , String fontFamily, int fontSize, boolean bold, XSSFColor bgColor, HSSFColor textColor            , HorizontalAlignment align, VerticalAlignment vAlign) {        this.type = type;        this.value = value;        this.width = width;        this.height = height;        this.border = border;        this.rowspan = rowSpan;        this.colspan = colSpan;        this.fontFamily = fontFamily;        this.fontSize = fontSize;        this.bold = bold;        this.backgroundColor = bgColor;        this.textColor = textColor;        this.horizontalAlignment = align;        this.verticalAlignment = vAlign;    }    public static Builder builder() {        return new Builder();    }    public static class Builder {        private CellType type;        private Object value;        private int width = 6000;        private short height = 600;        private BorderStyle border = BorderStyle.THIN;        private int rowspan = 0;        private int colspan = 0;        private String fontFamily;        private int fontSize = 0;        private boolean bold = false;        private XSSFColor backgroundColor;        private HSSFColor textColor;        private HorizontalAlignment horizontalAlignment;        private VerticalAlignment verticalAlignment;        public Builder type(CellType type) {            this.type = type;            return this;        }        public Builder value(Object value) {            this.value = value;            return this;        }        public Builder width(int width) {            this.width = width;            return this;        }        public Builder height(short height) {            this.height = height;            return this;        }        public Builder border(BorderStyle border) {            this.border = border;            return this;        }        public Builder rowspan(int rowspan) {            this.rowspan = rowspan;            return this;        }        public Builder colspan(int colspan) {            this.colspan = colspan;            return this;        }        public Builder fontFamily(String fontFamily) {            this.fontFamily = fontFamily;            return this;        }        public Builder fontSize(int fontSize) {            this.fontSize = fontSize;            return this;        }        public Builder bold(boolean bold) {            this.bold = bold;            return this;        }        public Builder backgroundColor(XSSFColor color) {            this.backgroundColor = color;            return this;        }        public Builder textColor(HSSFColor color) {            this.textColor = color;            return this;        }        public Builder horizontalAlignment(HorizontalAlignment align) {            this.horizontalAlignment = align;            return this;        }        public Builder verticalAlignment(VerticalAlignment vAlign) {            this.verticalAlignment = vAlign;            return this;        }        public CellModel build() {            return new CellModel(this.type, this.value, this.width, this.height, this.border                    , this.rowspan, this.colspan, this.fontFamily, this.fontSize, this.bold, this.backgroundColor, this.textColor                    , this.horizontalAlignment, this.verticalAlignment            );        }    }    public CellType getType() {        return type;    }    public Object getValue() {        return value;    }    public int getWidth() {        return width;    }    public short getHeight() {        return height;    }    public BorderStyle getBorder() {        return border;    }    public int getRowspan() {        return rowspan;    }    public int getColspan() {        return colspan;    }    public String getFontFamily() {        return fontFamily;    }    public int getFontSize() {        return fontSize;    }    public boolean isBold() {        return bold;    }    public XSSFColor getBackgroundColor() {        return backgroundColor;    }    public HSSFColor getTextColor() {        return textColor;    }    public HorizontalAlignment getHorizontalAlignment() {        return horizontalAlignment;    }    public VerticalAlignment getVerticalAlignment() {        return verticalAlignment;    }}